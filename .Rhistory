v=rep(x=4,by=5)
v
v=rep(x=4,by=5)
v
v=numeric(length=5)
v
apply?
apply?
?apply
?apply
setwd("C:/Users/jwmag/OneDrive/Desktop/Intro_to_biocomputing/R_exercises/exercise_7")
#convert comma-delimited file to tab-delimited version called iris.txt
?read.csv
?apply
?read.csv
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv", header = TRUE, sep = "\t")
iris.txt
iris.csv
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv")
iris.txt
head(iris.txt)
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv", sep = "\t")
iris.txt
?write.table
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.table(file = "iris.csv", sep = "\t")
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.table(file = "iris.csv", sep = ",")
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.table(file = "iris.csv")
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv")
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv", sep = "\t")
iris.txt
?replace
irist.txt[iris.txt == ","] <- "\t"
irist.csv[iris.csv == ","] <- "\t"
iris.txt[iris.txt == ","] <- "\t"
irist.txt
iris.txt
iris.txt[iris.txt == ,] <- \t
iris.txt[iris.txt == "",""] <- \t
write.table(read.csv('iris.csv'), 'irist.txt'))
write.table(read.csv('iris.csv'), 'irist.txt')
irist.txt
iris.txt
irisupdate.txt <- read.table("iris.txt", header=TRUE, sep = "\t")
iris.txt
irisupdate.txt <- read.table("iris.txt", header=TRUE, sep = "\t")
irisupdate.txt <- read.table("iris.txt", header=TRUE, sep="\t")
irisupdate.txt <- read.table("irist.txt", header=TRUE, sep="\t")
irisupdate.txt
head(irisupdate.txt)
iris.csv
read.csv("iris.csv")
read.csv("iris.csv", sep = "\t")
head(irisupdate.txt)
write.table(read.csv('iris.csv'), 'iris.txt')
iris.txt
read.table(iris.txt)
read.table("iris.txt")
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv", sep = "\t")
iris.txt
write.table(read.csv("iris.csv", sep = ","), "iris.txt")
iris.txt
#convert comma-delimited file to tab-delimited version called iris.txt
iris.txt <- read.csv(file = "iris.csv", sep = "\t")
write.table(read.csv('iris.csv'), 'iris.txt')
irist.txt
iris.txt
irisupdate.txt <- read.table("iris.txt", header=TRUE, sep="\t")
irisupdate.txt
head(iris.txt)
head(irisupdate.txt)
head(irisupdate.txt)
write.table(read.csv('iris.csv'), 'irisupdate.txt')
head(irisupdate.txt)
iris.txt <- read.table("irisupdate.txt", header=TRUE, sep="\t")
iris.txt
?read.table
?read.csv
?read.table
write.table(read.table('iris.csv'), 'irisupdate.txt')
write.table(read.csv('iris.csv'), 'irisupdate.txt')
read.csv(file = "iris.csv")
#write.table(read.csv('iris.csv'), 'irisupdate.txt')
#head(irisupdate.txt)
#iris.txt <- read.table("irisupdate.txt", header=TRUE, sep="\t")
iris.txt <- read.table("iris.csv", header=TRUE, sep="\t")
iris.txt
class(iris.txt)
class(iris.csv)
class(iris.csv)
class(iris.txt)
print("iris.txt")
print(iris.txt)
iris.txt
write.table(read.csv('iris.csv'), 'irisupdate.txt')
head(irisupdate.txt)
iris.txt <- read.table("irisupdate.txt", header=TRUE, sep="\t")
iris.txt
write.table(read.csv('iris.csv'), 'irisupdate.txt')
iris.txt <- read.table("irisupdate.txt", header=TRUE, sep="\t")
iris.txt
write.table(read.csv('iris.csv'), 'irisupdate.txt')
iris.txt <- read.table("irisupdate.txt", header=TRUE)
iris.txt
read.table("iris.txt", sep = "\t")
irist.txt
iris.txt
read.table("iris.txt", sep = ",")
iris.txt
read.table("iris.txt", sep = "\t")
read.table("iris.txt", sep = ",")
iris.txt
read.table("iris.txt", sep = "\t")
read.table("iris.txt", sep = "")
write.table(read.csv('iris.csv'), 'irisupdate.txt')
iris.txt <- read.table("irisupdate.txt", header=TRUE)
iris.txt
write.table(read.csv('iris.csv'), 'iris.txt')
iris.txt
read.table(file = "iris.txt", sep = "\t")
read.csv(file = "iris.txt")
read.csv(file = "iris.txt", sep = "")
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
iris.txt
read.table(file = "iris.txt", sep = "\t")
read.table(file = "iris.txt", sep = "\t")
iris.txt
read.table(file = "iris.txt", sep = "\t")
vector_one
vector_one <- seq(from=100,to=1000,by=100)
vector_one
#second create a 2x2 data frame with team names and final score from last week's ND football game
teams=c("Notre Dame","Pittsburgh")
scores=c(58,7)
df <- data.frame(teams,scores,stringsAsFALSE)
df <- data.frame(teams,scores,stringsAsFactors=FALSE)
df
?data.frame
number=999
number
M=matrix(1:50,nrow=10,ncol=5)
M
vector_two <- c("a","b","c")
vector_two
vector_two <- c("a","b","c")
vector_two
df <- data.frame(teams,scores,stringsAsFactors=TRUE)
df
df <- data.frame(teams,scores,stringsAsFactors=FALSE)
df
?list()
df
#switch the team names to be in the first row and the scores to be below the respective team names to match the team name x final score format of the question (rows x columns)
rbind(teams,scores)
df
#now create a list of length 5 that combines all of the elements just created
final=list(vector_one, df, number, M, vector_two)
final
length(final)
str(final)
#this function removes everything in environment from previous session
#good to use this at beginning of script since following code means it is self contained and not relying on something that was left last session
rm(list=ls())
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
iris.txt
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
iris.txt
setwd("C:/Users/jwmag/OneDrive/Desktop/Intro_to_biocomputing/R_exercises/exercise_7")
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
iris.txt
read.table(file = "iris.txt", sep = "\t")
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
read.table(file = "iris.txt", sep = "\t")
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
read.csv(iris.csv,sep=",")
read.csv(iris.txt,sep=",")
setwd("C:/Users/jwmag/OneDrive/Desktop/Intro_to_biocomputing/R_exercises/exercise_7")
read.csv(iris.txt,sep=",")
read.table(iris.txt,sep=",")
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
read.table(file = 'iris.txt', sep = "\t")
read.csv(file='iris.txt', sep=",")
read.table(file='iris.txt')
read.table(file = 'iris.txt', sep = "\t")
read.table(file = 'iris.txt')
#this function removes everything in environment from previous session
#good to use this at beginning of script since following code means it is self contained and not relying on something that was left last session
rm(list=ls())
#this function removes everything in environment from previous session
#good to use this at beginning of script since following code means it is self contained and not relying on something that was left last session
rm(list=ls())
write.table(read.csv('iris.csv'), 'iris.txt', sep = "\t")
read.table(file = 'iris.txt')
#first element is a vector with length 10 starting with 100, and increment by 100
vector_one <- seq(from=100,to=1000,by=100)
vector_one
#second create a 2x2 data frame with team names and final score from last week's ND football game
teams=c("Notre Dame","Pittsburgh")
scores=c(58,7)
df <- data.frame(teams,scores,stringsAsFactors=FALSE)
#switch the team names to be in the first row and the scores to be below the respective team names to match the team name x final score format of the question (rows x columns)
rbind(teams,scores)
df
#third create a variable with the number 999
number=999
number
#fourth create a 10-row, 5 column matrix containing integers from 1 to 50
M=matrix(1:50,nrow=10,ncol=5)
M
#fifth create a vector containing three letters
vector_two <- c("a","b","c")
vector_two
#now create a list of length 5 that combines all of the elements just created
final=list(vector_one, df, number, M, vector_two)
final
